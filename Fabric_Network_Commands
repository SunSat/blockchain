Useful CLIs : 
docker rm -f $(docker ps -aq) 

. fabricNetwork.sh down
. fabricNetwork.sh up

docker stop $(docker ps -q)
docker system prune
y
docker rm $(docker ps -a -q)
docker image prune -a
y
docker volume prune
y
docker network prune
y
docker rmi -f $(docker images -a -q)
docker system prune -a --volumes
y
docker rm -f $(docker ps -aq) 


cd /Users/sathishkumar_su/personal/blockchain/fabric/drug/network

move channel-artifacts & crypto-config folder to different name. So that we can generate again.

cryptogen generate --config=./crypto-config.yaml

configtxgen -profile OrdererGenesis -outputBlock ./channel-artifacts/genesis.block
configtxgen -profile PharmaNetworkChannel -outputCreateChannelTx ./channel-artifacts/channel.tx -channelID pharmanetworkchannel
configtxgen -profile PharmaNetworkChannel -outputAnchorPeersUpdate ./channel-artifacts/manufacturerMSPanchors.tx -channelID pharmanetworkchannel -asOrg manufacturerMSP

docker-compose -f ./docker-compose-e2e.yml up -d
docker ps -a


docker exec -it cli /bin/bash


CORE_PEER_LOCALMSPID="manufacturerMSP"
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/manufacturer.pharma-network.com/users/Admin@manufacturer.pharma-network.com/msp
CORE_PEER_ADDRESS=peer0.manufacturer.pharma-network.com:7051
peer channel create -o orderer.pharma-network.com:7050 -c pharmanetworkchannel -f ./channel-artifacts/channel.tx


peer channel join -b pharmanetworkchannel.block
CORE_PEER_ADDRESS=peer1.manufacturer.pharma-network.com:8051
peer channel join -b pharmanetworkchannel.block

CORE_PEER_LOCALMSPID="manufacturerMSP"
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/manufacturer.pharma-network.com/users/Admin@manufacturer.pharma-network.com/msp
CORE_PEER_ADDRESS=peer0.manufacturer.pharma-network.com:7051
peer channel update -o orderer.pharma-network.com:7050 -c pharmanetworkchannel -f ./channel-artifacts/manufacturerMSPanchors.tx


docker exec -it chaincode /bin/bash
npm install
npm run start-dev

NPM Strted successflly. But Need to install certnet.1.1 atleast one time. Hence Open new terminal and connect with cli. 
Installing the chin code

docker exec -it cli /bin/bash
CORE_PEER_LOCALMSPID="iitMSP"
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/iit.certification-network.com/users/Admin@iit.certification-network.com/msp
CORE_PEER_ADDRESS=peer0.iit.certification-network.com:7051
peer chaincode install -n certnet -v 1.1 -l node -p /opt/gopath/src/github.com/hyperledger/fabric/peer/chaincode/

CORE_PEER_LOCALMSPID="mhrdMSP"
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/mhrd.certification-network.com/users/Admin@mhrd.certification-network.com/msp
CORE_PEER_ADDRESS=peer0.mhrd.certification-network.com:9051
peer chaincode install -n certnet -v 1.1 -l node -p /opt/gopath/src/github.com/hyperledger/fabric/peer/chaincode/


CORE_PEER_LOCALMSPID="upgradMSP"
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/upgrad.certification-network.com/users/Admin@upgrad.certification-network.com/msp
CORE_PEER_ADDRESS=peer0.upgrad.certification-network.com:11051
peer chaincode install -n certnet -v 1.1 -l node -p /opt/gopath/src/github.com/hyperledger/fabric/peer/chaincode/

Instantiation of chin code container.
CORE_PEER_LOCALMSPID="iitMSP"
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/iit.certification-network.com/users/Admin@iit.certification-network.com/msp
CORE_PEER_ADDRESS=peer0.iit.certification-network.com:7051
peer chaincode instantiate -o orderer.certification-network.com:7050 -C certificationchannel -n certnet -l node -v 1.1 -c '{"Args":["org.certification-network.certnet:instantiate"]}' -P "OR ('iitMSP.member','mhrdMSP.member','upgradMSP.member')"


Install and Instantiate both were done.

Now check the logs
New Terminal:
docker logs peer0.iit.certification-network.com

Invoke the function.
New Terminal:

docker exec -it peer0.iit.certification-network.com /bin/bash

peer chaincode invoke -o orderer.certification-network.com:7050 -C certificationchannel -n certnet -c '{"Args":["org.certification-network.certnet:createStudent","0001","Aakash Bansal","connect@aakashbansal.com"]}'

peer chaincode invoke -o orderer.certification-network.com:7050 -C certificationchannel -n certnet -c '{"Args":["org.certification-network.certnet:getStudent","0002"]}'
 
peer chaincode invoke -o orderer.certification-network.com:7050 -C certificationchannel -n certnet -c '{"Args":["org.certification-network.certnet:createStudent","0003","VINOD KUMAR","test@gmail.com"]}'
peer chaincode invoke -o orderer.certification-network.com:7050 -C certificationchannel -n certnet -c '{"Args":["org.certification-network.certnet:getStudent","999"]}'

peer chaincode invoke -o orderer.certification-network.com:7050 -C certificationchannel -n certnet -c '{"Args":["org.certification-network.certnet:issueCertificate","0003", "PGDBC", "A", "asdfgh"]}'
peer chaincode invoke -o orderer.certification-network.com:7050 -C certificationchannel -n certnet -c '{"Args":["org.certification-network.certnet:verifyCertificate","0001", "PGDBC", "asdfgh"]}'

peer chaincode invoke -o orderer.certification-network.com:7050 -C certificationchannel -n certnet -c '{"Args":["org.certification-network.certnet:getCertificate","0003", "PGDBC"]}'

peer chaincode invoke -o orderer.certification-network.com:7050 -C certificationchannel -n certnet -c '{"Args":["org.certification-network.certnet:verifiyCertIssuer","PGDBC-0001"]}'

peer chaincode invoke -o orderer.certification-network.com:7050 -C certificationchannel -n certnet -c '{"Args":["org.certification-network.certnet:issueCertificate","999", "PGDBC", "A", "asdfgh"]}'


peer chaincode invoke -o orderer.banking-network.com:7050 -C bankchannel -n banknet -c '{Args:[org.banking-network.banknet:createAccount,0001,Aakash Bansal,connect@aakashbansal.com,current]}'
peer chaincode invoke -o orderer.banking-network.com:7050 -C bankchannel -n banknet -c '{"Args":["org.banking-network.banknet:createAccount","0001","Aakash Bansal","connect@aakashbansal.com","current"]}'


Dev Mode Completed. Now Need to deploy to production enviornment.

-----------
Stop Existing dockers
docker-compose -f ./docker-compose.yml down --volumes --remove-orphans

Change docker compose.yml file. ServerTlsEnable = true
Certificate and key file of path has to update propoperly. When using crypto-get tool this will be generated.


